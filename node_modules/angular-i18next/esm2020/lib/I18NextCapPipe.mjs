import { Inject, Injectable, Pipe } from '@angular/core';
import { I18NEXT_NAMESPACE, I18NEXT_SCOPE, I18NEXT_SERVICE, } from './I18NEXT_TOKENS';
import { I18NextPipe } from './I18NextPipe';
import * as i0 from "@angular/core";
export class I18NextCapPipe extends I18NextPipe {
    constructor(translateI18Next, ns, scope) {
        super(translateI18Next, ns, scope);
    }
    transform(key, options) {
        options = options || {};
        options.format = 'cap';
        return super.transform(key, options);
    }
}
I18NextCapPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.0.4", ngImport: i0, type: I18NextCapPipe, deps: [{ token: I18NEXT_SERVICE }, { token: I18NEXT_NAMESPACE }, { token: I18NEXT_SCOPE }], target: i0.ɵɵFactoryTarget.Pipe });
I18NextCapPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "14.0.0", version: "15.0.4", ngImport: i0, type: I18NextCapPipe, name: "i18nextCap" });
I18NextCapPipe.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "15.0.4", ngImport: i0, type: I18NextCapPipe });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.0.4", ngImport: i0, type: I18NextCapPipe, decorators: [{
            type: Injectable
        }, {
            type: Pipe,
            args: [{
                    name: 'i18nextCap',
                }]
        }], ctorParameters: function () { return [{ type: undefined, decorators: [{
                    type: Inject,
                    args: [I18NEXT_SERVICE]
                }] }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [I18NEXT_NAMESPACE]
                }] }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [I18NEXT_SCOPE]
                }] }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSTE4TmV4dENhcFBpcGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvbGliL0kxOE5leHRDYXBQaXBlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxNQUFNLEVBQUUsVUFBVSxFQUFFLElBQUksRUFBaUIsTUFBTSxlQUFlLENBQUM7QUFFeEUsT0FBTyxFQUNMLGlCQUFpQixFQUNqQixhQUFhLEVBQ2IsZUFBZSxHQUNoQixNQUFNLGtCQUFrQixDQUFDO0FBQzFCLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxlQUFlLENBQUM7O0FBUTVDLE1BQU0sT0FBTyxjQUFlLFNBQVEsV0FBVztJQUM3QyxZQUMyQixnQkFBcUMsRUFDbkMsRUFBcUIsRUFDekIsS0FBd0I7UUFFL0MsS0FBSyxDQUFDLGdCQUFnQixFQUFFLEVBQUUsRUFBRSxLQUFLLENBQUMsQ0FBQztJQUNyQyxDQUFDO0lBRWUsU0FBUyxDQUFDLEdBQXNCLEVBQUUsT0FBcUI7UUFDckUsT0FBTyxHQUFHLE9BQU8sSUFBSSxFQUFFLENBQUM7UUFDeEIsT0FBTyxDQUFDLE1BQU0sR0FBRyxLQUFLLENBQUM7UUFDdkIsT0FBTyxLQUFLLENBQUMsU0FBUyxDQUFDLEdBQUcsRUFBRSxPQUFPLENBQUMsQ0FBQztJQUN2QyxDQUFDOzsyR0FiVSxjQUFjLGtCQUVmLGVBQWUsYUFDZixpQkFBaUIsYUFDakIsYUFBYTt5R0FKWixjQUFjOytHQUFkLGNBQWM7MkZBQWQsY0FBYztrQkFKMUIsVUFBVTs7a0JBQ1YsSUFBSTttQkFBQztvQkFDSixJQUFJLEVBQUUsWUFBWTtpQkFDbkI7OzBCQUdJLE1BQU07MkJBQUMsZUFBZTs7MEJBQ3RCLE1BQU07MkJBQUMsaUJBQWlCOzswQkFDeEIsTUFBTTsyQkFBQyxhQUFhIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0LCBJbmplY3RhYmxlLCBQaXBlLCBQaXBlVHJhbnNmb3JtIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcblxyXG5pbXBvcnQge1xyXG4gIEkxOE5FWFRfTkFNRVNQQUNFLFxyXG4gIEkxOE5FWFRfU0NPUEUsXHJcbiAgSTE4TkVYVF9TRVJWSUNFLFxyXG59IGZyb20gJy4vSTE4TkVYVF9UT0tFTlMnO1xyXG5pbXBvcnQgeyBJMThOZXh0UGlwZSB9IGZyb20gJy4vSTE4TmV4dFBpcGUnO1xyXG5pbXBvcnQgeyBJVHJhbnNsYXRpb25TZXJ2aWNlIH0gZnJvbSAnLi9JVHJhbnNsYXRpb25TZXJ2aWNlJztcclxuaW1wb3J0IHsgUGlwZU9wdGlvbnMgfSBmcm9tICcuL21vZGVscyc7XHJcblxyXG5ASW5qZWN0YWJsZSgpXHJcbkBQaXBlKHtcclxuICBuYW1lOiAnaTE4bmV4dENhcCcsXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBJMThOZXh0Q2FwUGlwZSBleHRlbmRzIEkxOE5leHRQaXBlIGltcGxlbWVudHMgUGlwZVRyYW5zZm9ybSB7XHJcbiAgY29uc3RydWN0b3IoXHJcbiAgICBASW5qZWN0KEkxOE5FWFRfU0VSVklDRSkgdHJhbnNsYXRlSTE4TmV4dDogSVRyYW5zbGF0aW9uU2VydmljZSxcclxuICAgIEBJbmplY3QoSTE4TkVYVF9OQU1FU1BBQ0UpIG5zOiBzdHJpbmcgfCBzdHJpbmdbXSxcclxuICAgIEBJbmplY3QoSTE4TkVYVF9TQ09QRSkgc2NvcGU6IHN0cmluZyB8IHN0cmluZ1tdXHJcbiAgKSB7XHJcbiAgICBzdXBlcih0cmFuc2xhdGVJMThOZXh0LCBucywgc2NvcGUpO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIG92ZXJyaWRlIHRyYW5zZm9ybShrZXk6IHN0cmluZyB8IHN0cmluZ1tdLCBvcHRpb25zPzogUGlwZU9wdGlvbnMpOiBzdHJpbmcge1xyXG4gICAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XHJcbiAgICBvcHRpb25zLmZvcm1hdCA9ICdjYXAnO1xyXG4gICAgcmV0dXJuIHN1cGVyLnRyYW5zZm9ybShrZXksIG9wdGlvbnMpO1xyXG4gIH1cclxufVxyXG4iXX0=